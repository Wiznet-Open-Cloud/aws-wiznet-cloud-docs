"use strict";(self.webpackChunkappcircle_docusaurus=self.webpackChunkappcircle_docusaurus||[]).push([[952],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>u});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),m=d(n),u=a,v=m["".concat(l,".").concat(u)]||m[u]||p[u]||o;return n?i.createElement(v,c(c({ref:t},s),{},{components:n})):i.createElement(v,c({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:a,c[1]=r;for(var d=2;d<o;d++)c[d]=n[d];return i.createElement.apply(null,c)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5258:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var i=n(7462),a=(n(7294),n(3905)),o=n(4996);const c={title:"Connecting Device to Cloud",metaTitle:"Connecting Device to Cloud",metaDescription:"Connecting Device to Cloud",sidebar_position:9},r="Connecting Device to Cloud",l={unversionedId:"quickstart/how-to-connect-device/connecting-device-cloud",id:"quickstart/how-to-connect-device/connecting-device-cloud",title:"Connecting Device to Cloud",description:"If you have created a device, you need to connect the device to the Cloud.",source:"@site/docs/quickstart/how-to-connect-device/connecting-device-cloud.md",sourceDirName:"quickstart/how-to-connect-device",slug:"/quickstart/how-to-connect-device/connecting-device-cloud",permalink:"/quickstart/how-to-connect-device/connecting-device-cloud",draft:!1,editUrl:"https://github.com/Wiznet-Open-Cloud/aws-wiznet-cloud-docs/tree/main/docs/quickstart/how-to-connect-device/connecting-device-cloud.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Connecting Device to Cloud",metaTitle:"Connecting Device to Cloud",metaDescription:"Connecting Device to Cloud",sidebar_position:9},sidebar:"mySidebar",previous:{title:"Creating a Device",permalink:"/quickstart/how-to-connect-device/creating-device"},next:{title:"Creating a Device Template",permalink:"/quickstart/how-to-connect-device/creating-device-template"}},d={},s=[{value:"Prerequisite",id:"prerequisite",level:2},{value:"Device",id:"device",level:3},{value:"Development Environment",id:"development-environment",level:3},{value:"Connecting Device",id:"connecting-device",level:2},{value:"Git clone repository",id:"git-clone-repository",level:3},{value:"Setting configuration",id:"setting-configuration",level:3},{value:"Build and Upload",id:"build-and-upload",level:3},{value:"Check raw data",id:"check-raw-data",level:2}],p={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"connecting-device-to-cloud"},"Connecting Device to Cloud"),(0,a.kt)("p",null,"If you have created a device, you need to connect the device to the Cloud.\nIn this step, you will set up the firmware to send MQTT messages from your device to the Cloud.\nYou can see more examples in the ",(0,a.kt)("strong",{parentName:"p"},"Support")," menu."),(0,a.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,a.kt)("h3",{id:"device"},"Device"),(0,a.kt)("p",null,"This manual is for the W5100S-EVB-Pico."),(0,a.kt)("div",null,(0,a.kt)("img",{alt:"w5100s-evb-pico",src:"https://github.com/Wiznet/RP2040-HAT-AWS-C/raw/main/static/images/getting_started/w5100s-evb-pico_main.png",width:"50%"})),(0,a.kt)("p",null,"Please refer the link below to check the details of this device."),(0,a.kt)("a",{className:"rlc-container",href:"https://docs.wiznet.io/Product/iEthernet/W5100S/w5100s-evb-pico"},"\n  ",(0,a.kt)("div",{parentName:"a",className:"rlc-info"},"\n    ",(0,a.kt)("div",{parentName:"div",className:"rlc-title"},"W5100S-EVB-Pico | WIZnet Document System"),"\n    ",(0,a.kt)("div",{parentName:"div",className:"rlc-description"},"W5100S-EVB-Pico made for prototyping and testing Ethernet capabilities on Pico"),"\n    ",(0,a.kt)("div",{parentName:"div",className:"rlc-url-container"},"\n      ",(0,a.kt)("img",{parentName:"div",className:"rlc-favicon",src:"https://www.google.com/s2/favicons?domain=docs.wiznet.io",alt:"W5100S-EVB-Pico | WIZnet Document System favicon",width:16,height:16}),"\n      ",(0,a.kt)("span",{parentName:"div",className:"rlc-url"},"https://docs.wiznet.io/Product/iEthernet/W5100S/w5100s-evb-pico"),"\n    "),"\n  "),"\n  ",(0,a.kt)("div",{parentName:"a",className:"rlc-image-container"},"\n      ",(0,a.kt)("img",{parentName:"div",className:"rlc-image",src:"https://docs.wiznet.io/img/wiznet-logo.png",alt:"W5100S-EVB-Pico | WIZnet Document System"}),"\n    ")),(0,a.kt)("h3",{id:"development-environment"},"Development Environment"),(0,a.kt)("p",null,"In order to build the device firmware, a development environment configuration is required.\nTo configure the development environment, refer to the ",(0,a.kt)("strong",{parentName:"p"},"Development environment configuration")," part of the guide below."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Wiznet/RP2040-HAT-AWS-C/blob/main/getting_started.md#development-environment-configuration"},"RP2040-HAT-AWS-C Getting started"))),(0,a.kt)("h2",{id:"connecting-device"},"Connecting Device"),(0,a.kt)("h3",{id:"git-clone-repository"},"Git clone repository"),(0,a.kt)("p",null,"Clone the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Wiznet/RP2040-HAT-AWS-C"},"Github repository: RP2040-HAT-AWS-C"),"."),(0,a.kt)("a",{className:"rlc-container",href:"https://github.com/Wiznet/RP2040-HAT-AWS-C"},"\n  ",(0,a.kt)("div",{parentName:"a",className:"rlc-info"},"\n    ",(0,a.kt)("div",{parentName:"div",className:"rlc-title"},"GitHub - Wiznet/RP2040-HAT-AWS-C: AWS IoT SDK Example for RP2040"),"\n    ",(0,a.kt)("div",{parentName:"div",className:"rlc-description"},"AWS IoT SDK Example for RP2040. Contribute to Wiznet/RP2040-HAT-AWS-C development by creating an account on GitHub."),"\n    ",(0,a.kt)("div",{parentName:"div",className:"rlc-url-container"},"\n      ",(0,a.kt)("img",{parentName:"div",className:"rlc-favicon",src:"https://www.google.com/s2/favicons?domain=github.com",alt:"GitHub - Wiznet/RP2040-HAT-AWS-C: AWS IoT SDK Example for RP2040 favicon",width:16,height:16}),"\n      ",(0,a.kt)("span",{parentName:"div",className:"rlc-url"},"https://github.com/Wiznet/RP2040-HAT-AWS-C"),"\n    "),"\n  "),"\n  ",(0,a.kt)("div",{parentName:"a",className:"rlc-image-container"},"\n      ",(0,a.kt)("img",{parentName:"div",className:"rlc-image",src:"https://opengraph.githubassets.com/ae6898c9531ec1a7aa243e3d8d5bd89da51e264c8c09fba78bc11a862181dfe2/Wiznet/RP2040-HAT-AWS-C",alt:"GitHub - Wiznet/RP2040-HAT-AWS-C: AWS IoT SDK Example for RP2040"}),"\n    ")),(0,a.kt)("p",null,"Go to the working directory and enter the command below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/Wiznet/RP2040-HAT-AWS-C.git\n")),(0,a.kt)("h3",{id:"setting-configuration"},"Setting configuration"),(0,a.kt)("p",null,"Setup requires a domain and device name.\nGo to the detail page of the device which you created in the previously step and click the ",(0,a.kt)("strong",{parentName:"p"},"Device Management")," tab.\nCopy the device name and endpoint from the tab and edit the file below. ",(0,a.kt)("br",null)),(0,a.kt)("div",null,(0,a.kt)("img",{alt:"template-list",src:(0,o.Z)("/img/quickstart/connecting-device-cloud/device_management_tab.png")})),(0,a.kt)("br",null),(0,a.kt)("p",null,"Open the project in VS Code and set the details in the file ",(0,a.kt)("strong",{parentName:"p"},"examples/aws_iot_mqtt/aws_iot_mqtt.c"),". Paste the copied endpoint and device name."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'/* AWS IoT */\n#define MQTT_DOMAIN "awsiotdevice.endpoint.wizcloud.io"\n#define MQTT_PUB_TOPIC "$aws/things/YOUR_DEVICE_NAME/shadow/update"\n#define MQTT_SUB_TOPIC "$aws/things/YOUR_DEVICE_NAME/shadow/update/accepted"\n#define MQTT_USERNAME NULL\n#define MQTT_PASSWORD NULL\n#define MQTT_CLIENT_ID "YOUR_DEVICE_NAME"\n')),(0,a.kt)("p",null,"Next, change the certificate part in the ",(0,a.kt)("strong",{parentName:"p"},"examples/aws_iot_mqtt/mqtt_certificate.h")," file.\nEnter the certificate contents corresponding to each variable."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"mqtt_root_ca: AWS Root CA 1"),(0,a.kt)("li",{parentName:"ul"},"mqtt_client_cert: Devcie Certificate"),(0,a.kt)("li",{parentName:"ul"},"mqtt_private_key: Device Private Key")),(0,a.kt)("p",null,"Variables must be entered in the form below. Put ",(0,a.kt)("inlineCode",{parentName:"p"},'"')," (quotation marks) at the beginning of the line and ",(0,a.kt)("inlineCode",{parentName:"p"},'\\r\\n"')," at the end of the line."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'uint8_t mqtt_root_ca[] =\n"-----BEGIN CERTIFICATE-----\\r\\n"\n"...\\r\\n"\n"-----END CERTIFICATE-----\\r\\n";\n\nuint8_t mqtt_client_cert[] =\n"-----BEGIN CERTIFICATE-----\\r\\n"\n"...\\r\\n"\n"-----END CERTIFICATE-----\\r\\n";\n\nuint8_t mqtt_private_key[] =\n"-----BEGIN RSA PRIVATE KEY-----\\r\\n"\n"...\\r\\n"\n"-----END RSA PRIVATE KEY-----\\r\\n";\n')),(0,a.kt)("h3",{id:"build-and-upload"},"Build and Upload"),(0,a.kt)("p",null,"Detailed explanation on building and uploading firmware can be found at the link below."),(0,a.kt)("a",{className:"rlc-container",href:"https://github.com/Wiznet/RP2040-HAT-AWS-C/tree/main/examples/aws_iot_mqtt#step-5-build"},"\n  ",(0,a.kt)("div",{parentName:"a",className:"rlc-info"},"\n    ",(0,a.kt)("div",{parentName:"div",className:"rlc-title"},"RP2040-HAT-AWS-C/examples/aws_iot_mqtt at main \xb7 Wiznet/RP2040-HAT-AWS-C"),"\n    ",(0,a.kt)("div",{parentName:"div",className:"rlc-description"},"AWS IoT SDK Example for RP2040. Contribute to Wiznet/RP2040-HAT-AWS-C development by creating an account on GitHub."),"\n    ",(0,a.kt)("div",{parentName:"div",className:"rlc-url-container"},"\n      ",(0,a.kt)("img",{parentName:"div",className:"rlc-favicon",src:"https://www.google.com/s2/favicons?domain=github.com",alt:"RP2040-HAT-AWS-C/examples/aws_iot_mqtt at main \xb7 Wiznet/RP2040-HAT-AWS-C favicon",width:16,height:16}),"\n      ",(0,a.kt)("span",{parentName:"div",className:"rlc-url"},"https://github.com/Wiznet/RP2040-HAT-AWS-C/tree/main/examples/aws_iot_mqtt#step-5-build"),"\n    "),"\n  "),"\n  ",(0,a.kt)("div",{parentName:"a",className:"rlc-image-container"},"\n      ",(0,a.kt)("img",{parentName:"div",className:"rlc-image",src:"https://opengraph.githubassets.com/ae6898c9531ec1a7aa243e3d8d5bd89da51e264c8c09fba78bc11a862181dfe2/Wiznet/RP2040-HAT-AWS-C",alt:"RP2040-HAT-AWS-C/examples/aws_iot_mqtt at main \xb7 Wiznet/RP2040-HAT-AWS-C"}),"\n    ")),(0,a.kt)("h2",{id:"check-raw-data"},"Check raw data"),(0,a.kt)("p",null,"If the firmware is uploaded correctly, you can check the data that the device sends to WIZnet Cloud.\nGo to the detail page of the connected device, click the Raw data tab.\nClick the ",(0,a.kt)("strong",{parentName:"p"},"Refresh")," button to check the data being received in real time."),(0,a.kt)("div",null,(0,a.kt)("img",{alt:"template-list",src:(0,o.Z)("/img/quickstart/connecting-device-cloud/rawdata.png")})))}m.isMDXComponent=!0}}]);