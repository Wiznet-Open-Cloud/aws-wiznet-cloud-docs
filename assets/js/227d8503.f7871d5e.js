"use strict";(self.webpackChunkappcircle_docusaurus=self.webpackChunkappcircle_docusaurus||[]).push([[839],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=o(a),m=i,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return a?n.createElement(g,r(r({ref:t},s),{},{components:a})):n.createElement(g,r({ref:t},s))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:i,r[1]=c;for(var o=2;o<l;o++)r[o]=a[o];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9238:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var n=a(7462),i=(a(7294),a(3905)),l=a(4996);const r={title:"Creating a Device Template",metaTitle:"Creating a Device Template",metaDescription:"Creating a Device Template",sidebar_position:7},c="Creating a Device Template",p={unversionedId:"quickstart/how-to-connet/creating-device-template",id:"quickstart/how-to-connet/creating-device-template",title:"Creating a Device Template",description:"A device template defines the type of data that a device sends.",source:"@site/docs/quickstart/how-to-connet/creating-device-template.md",sourceDirName:"quickstart/how-to-connet",slug:"/quickstart/how-to-connet/creating-device-template",permalink:"/aws-wiznet-cloud-docs/quickstart/how-to-connet/creating-device-template",draft:!1,editUrl:"https://github.com/Wiznet-Open-Cloud/aws-wiznet-cloud-docs/tree/main/docs/quickstart/how-to-connet/creating-device-template.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Creating a Device Template",metaTitle:"Creating a Device Template",metaDescription:"Creating a Device Template",sidebar_position:7},sidebar:"mySidebar",previous:{title:"Connecting Device to Cloud",permalink:"/aws-wiznet-cloud-docs/quickstart/how-to-connet/connecting-device-cloud"},next:{title:"Creating a Dashboard",permalink:"/aws-wiznet-cloud-docs/quickstart/how-to-connet/creating-dashboard"}},o={},s=[{value:"Create new template",id:"create-new-template",level:3},{value:"Save and Publish Capabilities",id:"save-and-publish-capabilities",level:3},{value:"Applying a device template",id:"applying-a-device-template",level:3}],d={toc:s};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"creating-a-device-template"},"Creating a Device Template"),(0,i.kt)("p",null,"A device template defines the type of data that a device sends.\nIf the data format sent by the device matches the device template format, the data is saved as model data, otherwise it is saved as unmodel data.\nUnmodel data cannot create dashboard widgets."),(0,i.kt)("h3",{id:"create-new-template"},"Create new template"),(0,i.kt)("p",null,"In device template page, click ",(0,i.kt)("strong",{parentName:"p"},"+ New Template")," button."),(0,i.kt)("div",null,(0,i.kt)("img",{alt:"click-new-template-button",src:(0,l.Z)("/img/quickstart/create-template/create_template1.png")})),(0,i.kt)("br",null),(0,i.kt)("p",null,"In dialog, set the name of device template and click the ",(0,i.kt)("strong",{parentName:"p"},"Create")," button."),(0,i.kt)("div",null,(0,i.kt)("img",{alt:"create-template-dialog",src:(0,l.Z)("/img/quickstart/create-template/create_template2.png")})),(0,i.kt)("br",null),(0,i.kt)("p",null,"Once the template is created, click the name in the device template list to enter the detail page.\nDefine the data type sent from the device by adding capability on the detail page."),(0,i.kt)("div",null,(0,i.kt)("img",{alt:"click-template-details",src:(0,l.Z)("/img/quickstart/create-template/create_template3.png")})),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"save-and-publish-capabilities"},"Save and Publish Capabilities"),(0,i.kt)("p",null,"Device templates have two main concepts: ",(0,i.kt)("strong",{parentName:"p"},"save and publish"),". ",(0,i.kt)("br",null),"\n",(0,i.kt)("strong",{parentName:"p"},"Save")," means that the device template content is changed, but is not yet applied to the device.",(0,i.kt)("strong",{parentName:"p"},"Publish")," is to change the state to be applied to the actual device.\nIf a device template is applied to a device and the contents are changed in the template and saved, the device data is still classified based on the previous publish status."),(0,i.kt)("br",null),(0,i.kt)("p",null,"Click the ",(0,i.kt)("strong",{parentName:"p"},"Add Capability")," button to add a capability.\nThe capability defines the capability name and data type."),(0,i.kt)("div",null,(0,i.kt)("img",{alt:"add-capbilities",src:(0,l.Z)("/img/quickstart/create-template/create_template4.png")})),(0,i.kt)("br",null),(0,i.kt)("p",null,"When you have added all the capabilities, click the ",(0,i.kt)("strong",{parentName:"p"},"Save")," button to save the changes. Publishing is possible only after being saved. If it is not saved, you cannot publish."),(0,i.kt)("div",null,(0,i.kt)("img",{alt:"click-save-button",src:(0,l.Z)("/img/quickstart/create-template/create_template5.png")})),(0,i.kt)("br",null),(0,i.kt)("p",null,"After saving, click the ",(0,i.kt)("strong",{parentName:"p"},"Publish")," button to change it to a state that can actually be applied to the device."),(0,i.kt)("div",null,(0,i.kt)("img",{alt:"click-publish-button",src:(0,l.Z)("/img/quickstart/create-template/create_template6.png")})),(0,i.kt)("br",null),(0,i.kt)("p",null,"If you check the list of device templates after publishing, there are ",(0,i.kt)("strong",{parentName:"p"},"No pending changes")," and you can check the time of publication.\nIf you only save and do not publish, it will be displayed as ",(0,i.kt)("strong",{parentName:"p"},"Has Pending changes")," in the pending status."),(0,i.kt)("div",null,(0,i.kt)("img",{alt:"template-list",src:(0,l.Z)("/img/quickstart/create-template/create_template7.png")})),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"applying-a-device-template"},"Applying a device template"),(0,i.kt)("p",null,"In the device management tab, select the created template and click the ",(0,i.kt)("strong",{parentName:"p"},"Apply")," button to apply it."),(0,i.kt)("div",null,(0,i.kt)("img",{alt:"appliying-template",src:(0,l.Z)("/img/quickstart/create-template/create_template8.png")})),(0,i.kt)("br",null))}u.isMDXComponent=!0}}]);